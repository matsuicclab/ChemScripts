#!/bin/bash

set -eu
SCRIPT_DIR=$(cd $(dirname $0); pwd)
source "${SCRIPT_DIR}"/abstract/file2str

function help(){
	abstract_help "g16log2value" "<g16log>" "<value>" "gaussian log file" "arbitary value" ""
}

function parse_option(){
	varfunc=

	while [ "${#args[@]}" -gt 1 ]
	do
		case "${args[1]}" in
		-h | -help | --help)
			help
			exit
			# shift_args 1
			;;
		--num-atom)
			varfunc=get_num_atom
			;;
		--num-elec)
			varfunc=get_num_elec
			;;
		--num-a-elec)
			varfunc=get_num_a_elec
			;;
		--num-b-elec)
			varfunc=get_num_b_elec
			;;
		--charge)
			varfunc=get_charge
			;;
		--multiplicity)
			varfunc=get_num_elec
			;;
		--stoichiometry)
			varfunc=get_stoichiometry
			;;
		--basis)
			varfunc=get_basis
			;;
		--theory)
			varfunc=get_theory
			;;
		--SCF-energy)
			varfunc=get_scf_energy
			;;
		--total-opt-step)
			varfunc=get_total_opt_step
			;;
		--geometry)
			local step="${args[2]}"
			varfunc="get_geometry $step"
			;;
		--opt-geometry)
			varfunc=get_opt_geometry
			;;
		--num-im-freq)
			varfunc=get_num_im_freq
			;;
		--scr-files-path)
			varfunc=get_scr_files_path
			;;
		--version)
			varfunc=get_version
			;;
		--exit-status)
			varfunc=get_exit_status
			;;
		--cpu-time)
			varfunc=get_cpu_time
			;;
		--elapsed-time)
			varfunc=get_elapsed_time
			;;
		-*)
			error "unknown option: '${args[1]}'"
			;;
		*)
			;;
		esac

		# use only the first argument
		shift_args 1
		break
	done
}

function process(){
	# $1: inpFile
	#
	local glogFile="$1"
	local glogData=`cat "$glogFile"`
	$varfunc "$glogData"

}

function get_num_atom(){
	# $1: logData
	echo "$1" |
		grep 'NAtoms' |
		tail -n 1 |
		sed -r 's/.+NAtoms= +//' |
		sed -r 's/ .+//'
}

function get_num_elec(){
	# $1: logData
	echo "$1" |
		grep 'alpha electrons' |
		tail -n 1 |
		sed -r 's/[^0-9]/ /g' |
		sed -r 's/ +/ /g' |
		sed -r 's/^ //' |
		sed -r 's/ / + /' |
		xargs expr
}

function get_num_a_elec(){
	# $1: logData
	echo "$1" |
		grep 'alpha electrons' |
		tail -n 1 |
		sed -r 's/[^0-9]/ /g' |
		sed -r 's/ +/ /g' |
		sed -r 's/^ //' |
		sed -r 's/ .+//'
}

function get_num_b_elec(){
	# $1: logData
	echo "$1" |
		grep 'beta electrons' |
		tail -n 1 |
		sed -r 's/[^0-9]/ /g' |
		sed -r 's/ +/ /g' |
		sed -r 's/^ //' |
		sed -r 's/^[^ ]+ //' |
		sed -r 's/ +$//'
}

function get_charge(){
	# $1: logData
	echo "$1" |
		grep 'Charge' |
		grep 'Multiplicity' |
		tail -n 1 |
		sed -r 's/[^0-9+-]+/ /g' |
		sed -r 's/^ //' |
		sed -r 's/ .+//'
}

function get_multiplicity(){
	# $1: logData
	echo "$1" |
		grep 'Charge' |
		grep 'Multiplicity' |
		tail -n 1 |
		sed -r 's/[^0-9+-]+/ /g' |
		sed -r 's/^ //' |
		sed -r 's/^[^ ]+ //' |
		sed -r 's/ $//'
}

function get_stoichiometry(){
	# $1: logData
	echo "$1" |
		grep 'Stoichiometry' |
		tail -n 1 |
		sed -r 's/ +$//' |
		sed -r 's/.+ //'
}

function get_basis(){
	# $1: logData
	echo "$1" |
		grep 'Standard basis' |
		tail -n 1 |
		sed -r 's/^[^:]+://' |
		sed -r 's/^ +//' |
		sed -r 's/ +$//'
}

function get_theory(){
}

function get_scf_energy(){
	# $1: logData
	echo "$1" |
		grep 'SCF Done' |
		tail -n 1 |
		sed -r 's/.+=//' |
		sed -r 's/A\.U\..+//' |
		sed -r 's/ //g'
}

function get_total_opt_step(){
	# $1: logData
	echo "$1" |
		grep 'Step number' |
		grep 'out of a maximum of' |
		wc -l
}

function get_geometry(){
	# $1: stepnum
	# $2: logData
	local step="$1"
	local logData="$2"
	#echo "$1" |

}

function get_opt_geometry(){
	# $1: logData
	local logData="$1"
	local totalStep=`get_total_opt_step "$logData"`
	get_geometry "$totalStep" "$logData"
}

function get_num_im_freq(){
	# $1: logData
	echo "$1" |
		sed -r -n '/\*{6}.+imaginary frequencies.+\*{6}/p' |
		tail -n 1 |
		sed -r 's/[^0-9]//g'
}

function get_scr_files_path(){
	# $1: logData
	local logData="$1"
	local inpFilePath=`echo "$logData" |
						grep 'scrdir' |
						head -n 1 |
						sed -r 's/ *-scrdir=.+//' |
						sed -r 's/.* +//' |
						sed -r 's/"//g'`
	local PID=`echo "$logData" |
				grep ' PID=' |
				head -n 1 |
				sed -r 's/.+ //' |
				sed -r 's/[^0-9]//g'`

	# get a pattern of the d2e, rwf, int files
	local otherFilePathPattern=`echo "$inpFilePath" | sed -r "s/-[^-]+$/-${PID}./"`

	local scrFilesPath=`ls -l "$inpFilePath" "$otherFilePathPattern"* 2>/dev/null |
					 		sed -r 's/^([^ ]+ +){2}//' |
					 		sed -r -n "/^`whoami`/p" |
					 		sed -r 's/^([^ ]+ +){6}//'`
	if [ "$scrFilesPath" ]; then
		echo "$scrFilesPath"
	else
		warning "scr file not found"
	fi
}

function get_version(){
	# $1: logData
	echo "$1" |
		sed -r -n '/^ +\*+ *$/,$p' |
		head |
		grep -i gaussian |
		head -n 1 |
		sed -r 's/  /,/g' |
		cut -d , -f 2
}

function get_exit_status(){
}

function get_cpu_time(){
	# $1: logData
	echo "$1" |
		grep 'Job cpu time' |
		sed -r 's/.+://' |
		sed -r 's/\.$//' |
		xargs echo |
		xargs -I{} date --date '19700101 {}' +%s |
		xargs -I{} expr {} - `date --date '19700101' +%s`
}

function get_elapsed_time(){
	# $1: logData
	echo "$1" |
		grep 'Elapsed time' |
		sed -r 's/.+://' |
		sed -r 's/\.$//' |
		xargs echo |
		xargs -I{} date --date '19700101 {}' +%s |
		xargs -I{} expr {} - `date --date '19700101' +%s`
}

main "$@"



