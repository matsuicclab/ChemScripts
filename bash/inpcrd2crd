#!/bin/bash
set -eu
SCRIPT_DIR=$(cd $(dirname $0); pwd)
source "${SCRIPT_DIR}"/abstract/files2files

function help(){
	abstract_help "inpcrd2crd" "<inpcrd>" "<crd>" "Amber input initial coordinate file" "Amber trajectory file (ascii)" ""
}

function parse_option(){
	while [ "${#args[@]}" -gt 1 ]
	do
		case "${args[1]}" in
		-h | -help | --help)
			help
			exit
			# shift_args 1
			;;
		-*)
			error "unknown option: '${args[1]}'"
			;;
		*)
			break
			;;
		esac
	done
}

function get_default_conversion_patt(){
	echo '{s/$/.crd/}'
}

function process(){
	# $1: inpFile
	#

	local inpcrdFile="$1"
	local inpcrdData=`cat "$inpcrdFile"`
		
	local numAtom=`echo "$inpcrdData" | sed -r -n 2p | sed -r 's/ //g'`
	local coord=`echo "$inpcrdData" | 
					sed -r '1,2d' |
					sed -r '$d' | 
					sed -r 's/ /\n/g' | 
					sed -r '/^$/d'`
	local numCoord=`echo "$coord" | wc -l`
	local estimatedNumCoord=$(($numAtom * 3))
	if [ ! "$estimatedNumCoord" = "$numCoord" ]; then
		warning "number of coordinates does not match expected"
	fi

	coord=`format_data "$coord"`
					
	local systemData=`echo "$inpcrdData" |
							tail -n 1 |
							sed -r 's/ /\n/g' |
							sed -r '/^$/d'`
	local numSystemData=`echo "$systemData" | wc -l`
	systemData=`format_data "$systemData"`
	
	# print
	echo "trajectory generated by inpcrd2crd from ${inpcrdFile}"
	echo "$coord"
	
	if [ "$numSystemData" = 6 ]; then
		# if box
		echo "$systemData"
	fi
}

function format_data(){
	echo "$1" |
		awk '{printf "%8.3f\n", $1}' | 
		sed -r '$s/$/\n\n\n\n\n\n\n\n\n/' | 
		sed -r '{N;N;N;N;N;N;N;N;N;s/\n/ /g}' | 
		sed -r '/^$/d' | 
		sed -r 's/^/ /'
}

main "$@"

