#!/bin/bash

set -eu
SCRIPT_DIR=$(cd $(dirname $0); pwd)
source "${SCRIPT_DIR}"/abstract/str2str

function help(){
	abstract_help "energy2energy" "<unit1>" "<unit2>" "energy in 'unit1'" "energy in 'unit2'"
}

function option_help(){
cat <<EOF
    -h, -help, --help | display this help
    -d, --delimiter <delimiter> | set delimiter
                                | default: ' '
    -f, --field <num>           | set target column number
                                | default: 1
    -s, --skip <num>            | set the title section
                                | default: 0
    --format <fmt>              | set format for print
                                | default: %.10g
    --from <unit> | a.u. / hartree / kcal/mol / eV / J / K / cm-1
    --to <unit>   | same as above

EOF
}

function parse_option(){
	# set default
	delimiter=' '
	targetColumnNum=1
	headerEndLineNum=0
	fromunit=
	tounit=
	format='%.10g'

	while [ "${#args[@]}" -gt 1 ]
	do
		case "${args[1]}" in
		-h | -help | --help)
			help
			exit
			# shift_args 1
			;;
		-d | --delimiter)
			delimiter="${args[2]}"
			shift_args 2
			;;
		-f | --field)
			targetColumnNum="${args[2]}"
			shift_args 2
			;;
		-s | --skip)
			headerEndLineNum="${args[2]}"
			shift_args 2
			;;
		--format)
			format="${args[2]}"
			shift_args 2
			;;
		--from)
			fromunit="${args[2]}"
			shift_args 2
			;;
		--to)
			tounit="${args[2]}"
			shift_args 2
			;;
		-*)
			error "unknown option: '${args[1]}'"
			;;
		*)
			break
			;;
		esac
	done

	if [ ! "$fromunit" ] ; then
		error "--from option is unspecified"
	fi
	if [ ! "$tounit" ] ; then
		error "--to option is unspecified"
	fi

	# calc unit conversion factor
	fromunitfactor=`get_factor "$fromunit"`
	tounitfactor=`get_factor "$tounit"`
	factor=`awk -v format="${format}" "BEGIN {OFMT=format; print 1 / ${fromunitfactor} * ${tounitfactor} }"`
}

function get_factor(){
	# $1: unitname
	local unitname
	unitname="$1"
	case "$unitname" in
	au | a.u. | hartree | Hartree)
		factor=1
		;;
	J)
		# 1[a.u.] = 4.3597447222060e-18[J] from https://en.wikipedia.org/wiki/Atomic_units
		factor="4.3597447222060e-18"
		;;
	eV)
		# 1[J] = 1[C.V]
		# 1[C] = 1/1.602176634e-19[e] from https://en.wikipedia.org/wiki/Elementary_charge
		factor="27.211386245981"
		;;
	K)
		# kB = 1.380649e-23[J/K] from https://en.wikipedia.org/wiki/Boltzmann_constant
		factor="315775.02480399"
		;;
	cm-1)
		# h = 6.62607015e-34[J.s] from https://en.wikipedia.org/wiki/Planck_constant
		# c = 299792458[m/s]      from https://en.wikipedia.org/wiki/Speed_of_light
		factor="219474.63136314"
		;;
	kcal/mol)
		# 1[J] = 1/4.184[cal]    from https://en.wikipedia.org/wiki/Calorie
		# 1[mol] = 6.02214076e23 from  https://en.wikipedia.org/wiki/Avogadro_constant
		factor="627.50947406290"
		;;
	*)
		error "specified unit is invalid: ${unitname}"
		;;
	esac

	echo "$factor"
}

function process(){
	# $1: inpStr
	#
	local inpStr
	inpStr="$1"

	echo "$inpStr" |
		awk -v headerend="${headerEndLineNum}" \
			-v field="${targetColumnNum}" \
			-v delimiter="${delimiter}" \
			-v format="${format}" \
			-v factor="${factor}" \
			'BEGIN {
				FS="["delimiter"]"; OFS=delimiter; # set delimiter
				OFMT=format # format when printing
			}
			{
				if (NR > headerend && NF >= field) {
					# convert
					$field=sprintf(OFMT, $field*factor); print $0
				} else {
					# do nothing
					print $0
				}
			}'

}

main "$@"



